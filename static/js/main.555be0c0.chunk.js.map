{"version":3,"sources":["images/flower.jpg","images/colors.jpg","images/animals.jpg","components/Login.js","components/Entry.js","ServerInterface/entries.js","ServerInterface/server.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","props","onLogin","state","authenticated","onChange","event","value","target","setState","username","onSubmit","trim","length","from","pathname","this","to","id","htmlFor","type","name","React","Component","Entry","cursor","questionFormatter","question","picture","options","prompt","questions","entry","questionCursor","input","location","entries","setQuestions","console","log","className","src","server","fetchEntries","Home","login","loggedIn","directFlower","directAnimal","directColor","body","toUpperCase","flower","alt","onClick","animals","directAniaml","colors","App","exact","path","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.555be0c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flower.511f2e86.jpg\";","module.exports = __webpack_public_path__ + \"static/media/colors.c64ea3c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/animals.746d7a76.jpg\";","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            authenticated: false\r\n        };\r\n    }\r\n\r\n    onLogin = () => {\r\n        if(this.state.authenticated) {\r\n            \r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        const value = event.target.value;\r\n        this.setState(\r\n            {\r\n                username:value\r\n            }\r\n        )\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        if(this.state.username.trim().length > 0) {\r\n            this.setState(\r\n                {\r\n                    authenticated:true\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let from = {pathname:'/', state: {username: this.state.username, authenticated:this.authenticated}};\r\n        if(this.state.authenticated) {\r\n            return(\r\n                <Redirect to={from} />\r\n            )\r\n        }\r\n        return(\r\n        <div id=\"loginForm\">\r\n            <form onSubmit={this.onSubmit}>\r\n                <label htmlFor=\"username\">Username: </label>\r\n                <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.onChange}></input>\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Login;","import React from 'react';\r\nimport flower from '../images/flower.jpg';\r\nclass Entry extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            prompt : \"\",\r\n            questions :  null,\r\n            cursor: 0,\r\n            entry: null,\r\n            question: null\r\n        }\r\n    }\r\n\r\n    renderQuestion() {\r\n        let questionCursor = this.state.cursor;\r\n        if(this.state.entry) {\r\n            if(this.state.entry.questions) {\r\n                this.setState(\r\n                    {\r\n                        question: this.state.questions[questionCursor],\r\n                        cursor: this.state.cursor+1\r\n                    }\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    setQuestions(input) {\r\n        if(this.state.questions === null) {\r\n            this.setState(\r\n                {\r\n                    questions: input\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    onSubmit = () => {\r\n        this.setState(\r\n            {\r\n                cursor: this.state.cursor+1\r\n            }\r\n        )\r\n    }\r\n\r\n    questionFormatter = (question) => {\r\n        if(question.picture) {\r\n            if(question.options) {\r\n                return (\r\n                    <form onSubmit={this.onSubmit}>\r\n                    <p>{this.state.prompt}</p>\r\n                        <input type=\"radio\" name=\"answer\" value=\"option1\" /> {question.options[0]}\r\n                        <input type=\"radio\" name=\"answer\" value=\"option1\" /> {question.options[1]}\r\n                        <input type=\"radio\" name=\"answer\" value=\"option1\" /> {question.options[2]}\r\n                        <p><input type=\"submit\" value=\"Submit\" /></p>\r\n                    </form>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let entry = {};\r\n        if(this.props.location) {\r\n            if(this.props.location.state) {\r\n                if(this.props.location.state.entries) {\r\n                    let entries = this.props.location.state.entries;\r\n                    let cursor = this.props.location.state.cursor;\r\n                    entry = entries[cursor];\r\n                }\r\n            }\r\n        }\r\n        if(!this.questions) {\r\n            this.setQuestions(entry.questions)\r\n        }\r\n        console.log(entry)\r\n        return (\r\n            <div className=\"quizContainer\">\r\n                <p>{entry.name}</p>\r\n                <img src={entry.picture} />\r\n                <div className=\"questions\">\r\n                    {entry.questions ? this.questionFormatter(entry.questions[this.state.cursor]) : \"\"}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Entry;","let entries = [\r\n    {\r\n        name: \"flowers\",\r\n        prompt: \"What is this flower?\",\r\n        picture: \"../images/flower.jpg\", \r\n        questions: [\r\n            {\r\n                picture : \"../images/daffodil.png\",\r\n                options: [\"Daffodil\", \"Lilly\", \"Rose\"]\r\n            },\r\n            {\r\n                picture: \".../images/rose.png\",\r\n                options: [\"Waterlily\", \"Daisy\", \"Rose\"]\r\n            },\r\n            {\r\n                picture: \"../images/cherryblossom.png\",\r\n                options: [\"Daisy\", \"Cherry Blossom\", \"Tulip\"]\r\n            },\r\n            {\r\n                picture: \".../images/daisy.jpg\",\r\n                options: [\"Sunflower\", \"Lily\", \"Daisy\"]\r\n            },\r\n            {\r\n                picture: \"../images/lily.jpg\",\r\n                options: [\"Lily\", \"Venus Fly Trap\", \"Rose\"]\r\n            },\r\n            {\r\n                picture: \"../images/waterlily.png\",\r\n                options: [\"Waterlily\", \"Bellflowers\", \"Yarrow\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        name: \"animals\",\r\n        prompt: \"Name this Animal\",\r\n        picture: \"../images/animals.jpg\",\r\n        questions: [\r\n            {\r\n                picture : \"../images/elephant.jpg\",\r\n                options: [\"Cow\", \"Snake\", \"Elephant\"]\r\n            },\r\n            {\r\n                picture : \"../images/giraffe.jpg\",\r\n                options: [\"Giraffe\", \"Panda\", \"Alligator\"]\r\n            },\r\n            {\r\n                picture : \"../images/dog.jpg\",\r\n                options: [\"Cow\", \"Dog\", \"Elephant\"]\r\n            },\r\n            {\r\n                picture : \"../images/gorilla.jpg\",\r\n                options: [\"Snake\", \"Gorilla\", \"Honey Badger\"]\r\n            },\r\n            {\r\n                picture : \"../images/panda.jpg\",\r\n                options: [\"Lizard\", \"Elephant\", \"Panda\"]\r\n            }, \r\n            {\r\n                picture : \"../images/zebra.jpg\",\r\n                options: [\"Lion\", \"Zebra\", \"Lemur\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        name: \"colors\",\r\n        prompt: \"What is the shown color?\",\r\n        picture: \"../images/colors.jpg\",\r\n        questions: [\r\n            {\r\n                picture : \"../images/red.jpg\",\r\n                options: [\"Red\", \"Blue\", \"Green\"]\r\n            },\r\n            {\r\n                picture : \"../images/blue.jpg\",\r\n                options: [\"Blue\", \"Orange\", \"Yellow\"]\r\n            },\r\n            {\r\n                picture : \"../images/green.png\",\r\n                options: [\"Black\", \"Blue\", \"Green\"]\r\n            },\r\n            {\r\n                picture : \"../images/yellow.png\",\r\n                options: [\"Green\", \"Yellow\", \"Black\"]\r\n            },\r\n            {\r\n                picture : \"../images/purple.jpg\",\r\n                options: [\"Purple\", \"Green\", \"Red\"]\r\n            }, \r\n            {\r\n                picture : \"../images/white.jpg\",\r\n                options: [\"White\", \"Blue\", \"Yellow\"]\r\n            }\r\n        ]\r\n    }\r\n]\r\nexport default entries;","import entries from './entries';\r\nlet getEntries = () => {\r\n    // We Will connect to backend later\r\n    return entries;\r\n}\r\n\r\nlet server = {\r\n    fetchEntries : getEntries\r\n};\r\n\r\nexport default server;","import React from 'react';\r\nimport Login from \"./Login\";\r\nimport Entry from './Entry';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport server from '../ServerInterface/server';\r\nimport flower from '../images/flower.jpg';\r\nimport colors from '../images/colors.jpg';\r\nimport animals from '../images/animals.jpg';\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            loggedIn: false,\r\n            authenticated:false,\r\n            username: \"\",\r\n            entries : [],\r\n            cursor: 0 // current index in list of quizzes \r\n        };\r\n    }\r\n\r\n    login = () => {\r\n        this.setState({\r\n            loggedIn: true\r\n        });\r\n    }\r\n    \r\n    directFlower = () => {\r\n        let from = {pathname:\"/flower-quiz\", state: {cursor:0, entries: this.state.entries, picture: \"mydictionary/src/images/flower.jpg\", prompt: \"Which flower is this?\"}};\r\n        this.setState(\r\n            {\r\n                from: from\r\n            }\r\n        )\r\n    }\r\n    \r\n    directAnimal = () => {\r\n        let from = {pathname:\"/animal-quiz\", state: {cursor:1, entries: this.state.entries, prompt:\"Name this Animal\"}};\r\n        this.setState(\r\n            {\r\n                from: from\r\n            }\r\n        )\r\n    }\r\n\r\n    directColor = () => {\r\n        let from = {pathname:\"/color-quiz\", state: {cursor:2, entries: this.state.entries, prompt: \"Name this color\"}};\r\n        this.setState(\r\n            {\r\n                from: from\r\n            }\r\n        )\r\n    }\r\n\r\n    body = () => {\r\n        return(\r\n            <div className=\"content\">\r\n                {this.state.entries.length > 0 ? <Link ><p>{this.state.entries[this.state.cursor].name.toUpperCase()} </p><img src={flower} alt=\"Flower Quiz\" onClick={this.directFlower} to=\"/flower-quiz\" /></Link> : \"NO ENTRIES FETCHED\"}\r\n                {this.state.entries.length > 0 ? <Link to=\"/animal-quiz\"><p>{this.state.entries[this.state.cursor+1].name.toUpperCase()} </p><img src={animals} alt=\"Animal Quiz\" onClick={this.directAniaml} /></Link> : \"NO ENTRIES FETCHED\"}\r\n                {this.state.entries.length > 0 ? <Link to=\"/color-quiz\"><p>{this.state.entries[this.state.cursor+2].name.toUpperCase()} </p><img src={colors} alt=\"Color Quiz\" onClick={this.directColor} /></Link> : \"NO ENTRIES FETCHED\"}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        const entries = server.fetchEntries();\r\n        this.setState(\r\n            {\r\n                entries : entries\r\n            }\r\n        )\r\n    }\r\n    \r\n    render () {\r\n        if(this.props.location) {\r\n            if(this.props.location.state) {\r\n                if(this.props.location.state.username && this.state.username <= 0) {\r\n                    this.setState(\r\n                        {\r\n                            username: this.props.location.state.username,\r\n                            authenticated: this.props.location.state.authenticated\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.state.from) {\r\n            let from = this.state.from;\r\n            if(from.state) {\r\n                return (\r\n                    <Redirect to={from} />\r\n                )\r\n            }\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                <div id=\"navigation-bar\">\r\n                    <div className=\"username\">\r\n                        {this.state.username.length > 0 ? <div className=\"username\">{this.state.username}</div> : <Login />}\r\n                    </div>\r\n                </div>\r\n                <body className='body'>\r\n                    {this.state.username.length > 0 ? <div className=\"content\">\r\n                {this.state.entries.length > 0 ? <div><p>{this.state.entries[this.state.cursor].name.toUpperCase()}</p><img src={flower} alt=\"Flower Quiz\" onClick={this.directFlower} /></div> : \"NO ENTRIES FETCHED\"}\r\n                {this.state.entries.length > 0 ? <div><p>{this.state.entries[this.state.cursor+1].name.toUpperCase()} </p><img src={animals} alt=\"Flower Quiz\" onClick={this.directAnimal}/></div> : \"NO ENTRIES FETCHED\"}\r\n                {this.state.entries.length > 0 ? <div><p>{this.state.entries[this.state.cursor+2].name.toUpperCase()} </p><img src={colors} alt=\"Flower Quiz\" onClick={this.directColor}/></div> : \"NO ENTRIES FETCHED\"}\r\n            </div> : \"NOT AUTHENTICATED\"}\r\n                </body>\r\n                \r\n            </div>\r\n        \r\n        )\r\n        \r\n    }\r\n}\r\nexport default Home;","import React from 'react';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Entry from './components/Entry';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nconst App = function(props) {\n    return(\n      <div className=\"App\">\n        <Router>\n        <Switch>\n          <Route exact path=\"/\" render={props => <Home {...props}/>}>\n            \n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/flower-quiz\" render={props => <Entry {...props}/>}>\n\n          </Route>\n          <Route exact path=\"/animal-quiz\" render={props => <Entry {...props}/>}>\n          \n          </Route>\n          <Route exact path=\"/color-quiz\" render={props => <Entry {...props}/>}>\n\n          </Route>\n        </Switch>\n      </Router>\n      </div>\n    )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}